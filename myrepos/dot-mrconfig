[DEFAULT]

lib =
  git() {
    command git --no-pager "$@"
  }
  #
  gh() {
    env GH_PAGER= gh "$@"
  }

edit =
  if [[ $# -gt 0 ]]; then
    vim "$@"
  else
    vim .
  fi

# TODO: Figure out how to tell Tilix to open a tab.
tab =
  if [[ "$( uname -s )" = Darwi ]]; then
    osascript -e 'tell application "iTerm2" to tell current window' \
              -e '    create tab with default profile' \
              -e '    tell current session to write text "builtin cd '"'$MR_REPO'"'; '"$@"'"' \
              -e 'end tell'
    exit
  fi
  error "unsupported on $( uname -s )"

# Quick access to the git(1) and gh(1) commands.
git_git = git "$@"
git_gh  = gh "$@"

# Some of the more common git(1) commands.
git_branch = git branch "$@"
git_gc     = git gc "$@"
git_switch = git switch "$@"
git_tags   = git tag "$@"

git_checkoutdefaultbranch = git switch "$( git default-branch )"
git_defaultbranch         = git default-branch
git_localbranches         = git branch -vv
git_mergedefaultbranch    = git merge "$( git default-branch )"

include = cat ~/.mrconfig.d/*.conf 2>/dev/null || :

[ALIAS]
cod = checkoutdefaultbranch
db  = defaultbranch
lb  = localbranches
md  = mergedefaultbranch

[.dotfiles]
checkout = git clone 'https://github.com/sirhc/dotfiles.git' '.dotfiles'
chain    = true

[.vim]
checkout = git clone 'https://github.com/sirhc/vim-profile.git' '.vim'
chain    = true
