# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

if [[ -d /opt/homebrew/bin ]]; then
    path=(/opt/homebrew/bin $path)
fi

# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
ZSH_THEME="powerlevel10k/powerlevel10k"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in ~/.oh-my-zsh/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS=true

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# > pyenv activate molecule
# pyenv-virtualenv: prompt changing will be removed from future release. configure `export PYENV_VIRTUALENV_DISABLE_PROMPT=1' to simulate the behavior.
export PYENV_VIRTUALENV_DISABLE_PROMPT=1

export ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE=256
export ZSH_HIGHLIGHT_MAXLENGTH=256

export ZSH_PYENV_QUIET=true

plugins=()

_add_plugin() {
    local plugin="$1"

    if [[ -d $ZSH/plugins/$plugin ]]; then
        plugins+=($plugin)
        return
    fi

    if [[ -d $ZSH/custom/plugins/$plugin ]]; then
        plugins+=($plugin)
        return
    fi
}

_add_plugin aliases
_add_plugin aws
_add_plugin colored-man-pages
_add_plugin colorize
_add_plugin command-not-found
_add_plugin copybuffer
_add_plugin copypath
_add_plugin cp
_add_plugin dnf
_add_plugin docker
_add_plugin docker-compose
_add_plugin emoji
_add_plugin extract
_add_plugin fd
_add_plugin fzf
_add_plugin gh
_add_plugin git
_add_plugin golang
_add_plugin history-substring-search
_add_plugin hitchhiker
_add_plugin isodate
_add_plugin jsontools
_add_plugin jump
_add_plugin kubectl
_add_plugin percol
_add_plugin pyenv
_add_plugin python
_add_plugin rand-quote
_add_plugin ripgrep
_add_plugin screen
_add_plugin systemadmin
_add_plugin terraform
_add_plugin tig
_add_plugin tmux
_add_plugin wd
_add_plugin z

_add_plugin Renv
_add_plugin azure
_add_plugin git-open
_add_plugin goenv
_add_plugin op
_add_plugin packer
_add_plugin plenv
_add_plugin saml2aws
_add_plugin terraform-docs
_add_plugin tfenv
_add_plugin tgenv
_add_plugin zsh-autosuggestions
_add_plugin zsh-syntax-highlighting
_add_plugin zsh-vi-mode

if (( $+commands[brew] )); then
    _add_plugin brew
    _add_plugin macos
fi

# Add machine-specific plugins.
if [[ -e ~/.omz_plugins.local ]]; then
    while read -r _plugin; do
        _add_plugin $_plugin
    done < <(sed -e 's/^ *//' -e 's/ *$//' -e 's/^#.*//' -e '/^$/d' ~/.omz_plugins.local)
fi

unset _plugin
unset -f _add_plugin

source $ZSH/oh-my-zsh.sh

# User configuration

# This is annoying to have to put here, but vi-mode apparently breaks the
# up/down arrow searching. See
# <https://github.com/robbyrussell/oh-my-zsh/issues/1720#issuecomment-286366959>.
#
# start typing + [Up-Arrow] - fuzzy find history forward
if [[ "${terminfo[kcuu1]}" != "" ]]; then
    autoload -U up-line-or-beginning-search
    zle -N up-line-or-beginning-search
    bindkey "${terminfo[kcuu1]}" up-line-or-beginning-search
fi
# start typing + [Down-Arrow] - fuzzy find history backward
if [[ "${terminfo[kcud1]}" != "" ]]; then
    autoload -U down-line-or-beginning-search
    zle -N down-line-or-beginning-search
    bindkey "${terminfo[kcud1]}" down-line-or-beginning-search
fi

bindkey ' ' magic-space

setopt appendhistory
setopt extendedglob
setopt extendedhistory
setopt histexpiredupsfirst
setopt histignoredups
setopt histignorespace
setopt histverify
setopt interactivecomments

unsetopt globdots
unsetopt nomatch
unsetopt sharehistory

zstyle ':completion:*' accept-exact-dirs true  # https://unix.stackexchange.com/a/162145
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}'

if [[ -d ~/.oh-my-zsh/custom/completions ]]; then
    FPATH="$FPATH":~/.oh-my-zsh/custom/completions
fi

HISTIGNORE="ls:[bf]g:exit:reset:clear:cd:cd ..:cd.."
HISTFILE=~/.zsh_history
HISTSIZE=2048
SAVEHIST=20480

REPORTTIME=10

ZLE_REMOVE_SUFFIX_CHARS=$' \t\n'

__hostname="$(uname -n)"
__archname="$(printf '%s-%s' "$(uname -m)" "$(uname -s | tr '[:upper:]' '[:lower:]')")"

typeset -aU path manpath fpath

path=(~/bin ~/bin/$__archname ~/.local/bin $path)

umask 0022

export ANSIBLE_COW_SELECTION=random
export AWS_PAGER=
export BC_ENV_ARGS="-lq $HOME/.bcrc"
export CVS_RSH=ssh
export EDITOR=vim
export GREP=egrep
export LD_LIBRARY_PATH=~/.local/lib
export LESS='-# 4 -c -I -j 10 -M -R -S'
export MAN_POSIXLY_CORRECT=1
export MYSQL_PS1='(\u@\h) [\d]> '
export NOPASTE_SERVICES=Gist
export NPM_PACKAGES="$HOME/.local"
export PAGER=less
export PERL5LIB=~/perl5/lib/perl5
export PERLDOC_PAGER=less
export RSYNC_RSH=ssh
export R_LIBS=~/R
export SSL_CERT_DIR=~/.certs
export TZ=US/Pacific
export UNZIP=-qq

# Running Docker Compose with Rootless Podman (https://fedoramagazine.org/use-docker-compose-with-podman-to-orchestrate-containers-on-fedora/).
if [[ -S /run/user/$UID/podman/podman.sock ]]; then
    export DOCKER_HOST=unix:///run/user/$UID/podman/podman.sock
fi

# https://github.com/cantino/mcfly
if command -v mcfly >& /dev/null; then
    eval "$(mcfly init zsh)"
fi

# Machine-specific configuration that doesn't belong in the central version
# control.
if [[ -e ~/.zshrc.local ]]; then
    . ~/.zshrc.local
fi

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ -f ~/.p10k.zsh ]] && source ~/.p10k.zsh
