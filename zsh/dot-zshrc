# vim: ft=zsh nospell

typeset -aU path manpath fpath

path=(/usr/local/bin /usr/local/sbin)
path+=(/usr/bin)
[[ ! -L /bin ]] && path+=(/bin) # /bin and /sbin are symlinks on Fedora
path+=(/usr/sbin)
[[ ! -L /sbin ]] && path+=(/sbin)
[[ -d /opt/homebrew/bin ]] && path=(/opt/homebrew/bin $path)

path=(
    ~/bin
    # This is a habit from a time when my home directory was on NFS and shared on
    # multiple types of systems. It still comes in handy when I want to keep
    # binaries in `~/bin`, which I tend to sync between systems.
    ~/bin/${OSTYPE/[0-9]*/}-${CPUTYPE} # e.g., linux-gnu-x86_64, darwin-arm64
    ~/.local/bin
    $path
)

# See zshparam(1).
HISTFILE=~/.zsh_history
HISTORY_IGNORE='(ls|[bf]g|exit|reset|clear|cd|cd ..|cd..)'
HISTSIZE=1000000  # the number of items for the internal history list
LISTMAX=0         # only prompt if the list will scroll
REPORTMEMORY=1024 # report on commands exceeding 1 MiB RSS
REPORTTIME=5      # report on commands exceeding 5 s exec time
SAVEHIST=1000000  # maximum number of items for the history file
TIMEFMT="${TIMEFMT} max RSS %M"

# See zshoptions(1).
setopt EXTENDED_GLOB           # use #, ~, ^ for filename generation
setopt EXTENDED_HISTORY        # record command start time
setopt HIST_FCNTL_LOCK         # use fcntl to lock history file
setopt HIST_IGNORE_ALL_DUPS    # do not add duplicate command to history
setopt HIST_IGNORE_SPACE       # do not add commands with leading space to history
setopt HIST_NO_STORE           # do not store the `history` command
setopt HIST_REDUCE_BLANKS      # remove superfluous blanks
setopt HIST_SAVE_NO_DUPS       # do not save duplicate commands
setopt HIST_VERIFY             # confirm history expansion before executing
setopt INC_APPEND_HISTORY_TIME # append command to history file immediately after execution
setopt INTERACTIVE_COMMENTS    # allow comments even in interactive shells

unsetopt CASE_GLOB # case-insensitive file globbing
unsetopt NOMATCH   # leave unmatched patterns alone in arg list

export ANSIBLE_COW_SELECTION=random
export AWS_PAGER=
export BC_ENV_ARGS="-lq $HOME/.bcrc"
export EDITOR=vim
export GREP=egrep
export LESS='-# 4 -c -I -j 10 -M -R -S'
export MAN_POSIXLY_CORRECT=1
export NPM_PACKAGES="$HOME/.local"
export PAGER=less
export PERLDOC_PAGER=less
export RSYNC_RSH=ssh
export TZ=US/Pacific
export UNZIP=-qq

autoload -U compinit && compinit

zstyle ':completion:*' accept-exact-dirs true
zstyle ':completion:*' matcher-list 'm:{a-zA-Z-_}={A-Za-z_-}' 'r:|=*' 'l:|=* r:|=*'

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
    source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ -f ~/.p10k.zsh ]] && source ~/.p10k.zsh
[[ -f ~/.zshrc.d/powerlevel10k/powerlevel10k.zsh-theme ]] && source ~/.zshrc.d/powerlevel10k/powerlevel10k.zsh-theme

# Rudimentary plugin loading, but service my purposes at the moment.
# Rudimentary plugin loading, but serves my purposes at the moment.

_load_plugin() {
    local plugin="$1"
    if [[ -f ~/.zshrc.d/plugins/${plugin}/${plugin}.plugin.zsh ]]; then
        source ~/.zshrc.d/plugins/${plugin}/${plugin}.plugin.zsh
    fi
}

_load_plugin zsh-autosuggestions
_load_plugin zsh-syntax-highlighting
_load_plugin zsh-vim-mode
